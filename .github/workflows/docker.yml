name: radiofeed:docker
on:
    workflow_call:
        outputs:
            image:
                description: Docker image
                value: ${{ jobs.docker.outputs.image }}
jobs:
    docker:
        runs-on: ubuntu-latest
        permissions: write-all
        env:
            REGISTRY: ghcr.io
            IMAGE_NAME: ${{ github.repository }}
        outputs:
            image: ${{ steps.set_image.outputs.image }}
        steps:
            - name: Cloning repo
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0
            - name: Log in to Github Registry
              uses: docker/login-action@v3.4.0
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3.10.0
            - name: Extract metadata (tags, labels) for Docker
              id: meta
              uses: docker/metadata-action@v5.7.0
              with:
                  images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
            - name: Build and push Docker image
              id: push
              uses: docker/build-push-action@v6.15.0
              with:
                  context: .
                  file: ./Dockerfile
                  push: true
                  tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
                  labels: ${{ steps.meta.outputs.labels }}
                  cache-from: type=gha
                  cache-to: type=gha,mode=max
            - name: Generate artifact attestation
              uses: actions/attest-build-provenance@v1
              with:
                  subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
                  subject-digest: ${{ steps.push.outputs.digest }}
                  push-to-registry: true
            - name: Set image output
              id: set_image
              run: echo "image=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}" >> "$GITHUB_OUTPUT"
